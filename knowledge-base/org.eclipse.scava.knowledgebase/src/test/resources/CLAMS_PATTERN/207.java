{
    StatefulKnowledgeSession ksession;
    Map<String, Object> results;
    Map<String, Object> parameters;
    WorkItem workItem;
    long processInstanceId = ksession.startProcess(  " a string " , parameters ).getId();

    WorkflowProcessInstance processInstance = (WorkflowProcessInstance)
    ksession.getProcessInstance( processInstanceId );
    assertEquals( " a string " , processInstance.getVariable( " a string " ));
    assertEquals( " a string " , ((MyEntity) processInstance.getVariable( " a string " )).getTest());
    assertEquals( " a string " , ((MyVariableSerializable) processInstance.getVariable( " a string " )).getText());
    assertNull(processInstance.getVariable( " a string " ));
    assertNull(processInstance.getVariable( " a string " ));
    assertNull(processInstance.getVariable( " a string " ));

    results.put( " a string " , processInstance.getVariable( " a string " ));
    results.put( " a string " , processInstance.getVariable( " a string " )+ " a string " );

    ksession.getWorkItemManager().completeWorkItem( workItem.getId(),  results );

    processInstance = (WorkflowProcessInstance)
    ksession.getProcessInstance(processInstanceId);
    assertEquals( " a string " , processInstance.getVariable( " a string " ));
    assertEquals( " a string " , ((MyEntity) processInstance.getVariable( " a string " )).getTest());
    assertEquals( " a string " , ((MyVariableSerializable) processInstance.getVariable( " a string " )).getText());
    assertEquals( " a string " , processInstance.getVariable( " a string " ));
    assertEquals( " a string " , ((MyEntity) processInstance.getVariable( " a string " )).getTest());
    assertEquals( " a string " , ((MyVariableSerializable) processInstance.getVariable( " a string " )).getText());
    results.put( " a string " , processInstance.getVariable( " a string " ));
    results.put( " a string " , processInstance.getVariable( " a string " ));
    ksession.getWorkItemManager().completeWorkItem( workItem.getId(),  results );


    processInstance = (WorkflowProcessInstance)
    ksession.getProcessInstance(processInstanceId);
    assertEquals( " a string " , processInstance.getVariable( " a string " ));
    assertEquals( " a string " , ((MyEntity) processInstance.getVariable( " a string " )).getTest());
    assertEquals( " a string " , ((MyVariableSerializable) processInstance.getVariable( " a string " )).getText());
    assertEquals( " a string " , processInstance.getVariable( " a string " ));
    assertEquals( " a string " , ((MyEntity) processInstance.getVariable( " a string " )).getTest());
    assertEquals( " a string " , ((MyVariableSerializable) processInstance.getVariable( " a string " )).getText());
    results.put( " a string " , processInstance.getVariable( " a string " ));
    results.put( " a string " , processInstance.getVariable( " a string " ));
    ksession.getWorkItemManager().completeWorkItem( workItem.getId(),  results );

    processInstance = (WorkflowProcessInstance)
    ksession.getProcessInstance(processInstanceId);
    // Do something with processInstance
}    long processInstanceId = ksession.startProcess(  "  " a string "  " , parameters ).getId();    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    assertNull(processInstance.getVariable( "  " a string "  " ));    assertNull(processInstance.getVariable( "  " a string "  " ));    assertNull(processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " )+ "  " a string "  " );    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    long processInstanceId = ksession.startProcess(  "  " a string "  " , parameters ).getId();    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    assertNull(processInstance.getVariable( "  " a string "  " ));    assertNull(processInstance.getVariable( "  " a string "  " ));    assertNull(processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " )+ "  " a string "  " );    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    assertEquals( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    assertEquals( "  " a string "  " , ((MyEntity) processInstance.getVariable( "  " a string "  " )).getTest());    assertEquals( "  " a string "  " , ((MyVariableSerializable) processInstance.getVariable( "  " a string "  " )).getText());    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));    results.put( "  " a string "  " , processInstance.getVariable( "  " a string "  " ));}    long processInstanceId = ksession.startProcess(  "  "  " a string "  "  " , parameters ).getId();    assertEquals( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    assertEquals( "  "  " a string "  "  " , ((MyEntity) processInstance.getVariable( "  "  " a string "  "  " )).getTest());    assertEquals( "  "  " a string "  "  " , ((MyVariableSerializable) processInstance.getVariable( "  "  " a string "  "  " )).getText());    assertNull(processInstance.getVariable( "  "  " a string "  "  " ));    assertNull(processInstance.getVariable( "  "  " a string "  "  " ));    assertNull(processInstance.getVariable( "  "  " a string "  "  " ));    results.put( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    results.put( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " )+ "  "  " a string "  "  " );    assertEquals( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    assertEquals( "  "  " a string "  "  " , ((MyEntity) processInstance.getVariable( "  "  " a string "  "  " )).getTest());    assertEquals( "  "  " a string "  "  " , ((MyVariableSerializable) processInstance.getVariable( "  "  " a string "  "  " )).getText());    assertEquals( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    assertEquals( "  "  " a string "  "  " , ((MyEntity) processInstance.getVariable( "  "  " a string "  "  " )).getTest());    assertEquals( "  "  " a string "  "  " , ((MyVariableSerializable) processInstance.getVariable( "  "  " a string "  "  " )).getText());    results.put( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    results.put( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    assertEquals( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    assertEquals( "  "  " a string "  "  " , ((MyEntity) processInstance.getVariable( "  "  " a string "  "  " )).getTest());    assertEquals( "  "  " a string "  "  " , ((MyVariableSerializable) processInstance.getVariable( "  "  " a string "  "  " )).getText());    assertEquals( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    assertEquals( "  "  " a string "  "  " , ((MyEntity) processInstance.getVariable( "  "  " a string "  "  " )).getTest());    assertEquals( "  "  " a string "  "  " , ((MyVariableSerializable) processInstance.getVariable( "  "  " a string "  "  " )).getText());    results.put( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));    results.put( "  "  " a string "  "  " , processInstance.getVariable( "  "  " a string "  "  " ));
