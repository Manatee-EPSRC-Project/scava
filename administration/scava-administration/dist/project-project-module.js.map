{"version":3,"sources":["webpack:///./src/app/layout/project/components/configure-project/configure-project.component.html","webpack:///./src/app/layout/project/components/configure-project/configure-project.component.scss","webpack:///./src/app/layout/project/components/configure-project/configure-project.component.ts","webpack:///./src/app/layout/project/components/create-project/create-project.component.html","webpack:///./src/app/layout/project/components/create-project/create-project.component.scss","webpack:///./src/app/layout/project/components/create-project/create-project.component.ts","webpack:///./src/app/layout/project/components/import-project/import-project.component.html","webpack:///./src/app/layout/project/components/import-project/import-project.component.scss","webpack:///./src/app/layout/project/components/import-project/import-project.component.ts","webpack:///./src/app/layout/project/project-routing.module.ts","webpack:///./src/app/layout/project/project.component.html","webpack:///./src/app/layout/project/project.component.scss","webpack:///./src/app/layout/project/project.component.ts","webpack:///./src/app/layout/project/project.module.ts","webpack:///./src/app/shared/services/project-service/create-project.service.ts","webpack:///./src/app/shared/services/project-service/import-project.service.ts","webpack:///./src/app/shared/services/project-service/list-project.service.ts"],"names":[],"mappings":"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","file":"project-project-module.js","sourcesContent":["module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" />\\n\\n\\n<div class=\\\"project-title\\\">\\n    <div class=\\\" panel-profile\\\">\\n        <div class=\\\"panel-body text-center\\\">\\n            <i class=\\\"fa fa-4x fa-check-circle\\\"></i>\\n            <h3 class=\\\"panel-title\\\">\\n                <strong>up to date</strong>\\n            </h3>\\n        </div>\\n    </div>\\n    <h2 class=\\\"display-3\\\">{{project?.name}}</h2>\\n\\n    <h4>\\n        <p>{{project?.description}}</p>\\n    </h4>\\n</div>\\n\\n\\n\\n\\n\\n<table class=\\\"table table-condensed table-responsive table-project-information\\\">\\n    <tbody>\\n        <tr>\\n            <td>Project Type</td>\\n            <td>{{project?._type}}</td>\\n        </tr>\\n        <tr>\\n            <td>URL</td>\\n            <td>\\n                <a href=\\\"{{project?.html_url}}\\\">{{project?.html_url}}</a>\\n            </td>\\n\\n\\n        </tr>\\n        <tr>\\n            <td>Repository</td>\\n            <td>\\n                <a href=\\\"{{project?.svn_url}}\\\">{{project?.svn_url}}</a>\\n            </td>\\n        </tr>\\n        <tr>\\n            <td>Size</td>\\n            <td>{{project?.size}}</td>\\n        </tr>\\n    </tbody>\\n</table>\"","module.exports = \".project-title {\\n  color: gray;\\n  padding-bottom: 10px; }\\n\\n.table-project-information > tbody > tr {\\n  border-top: 1px solid #dddddd; }\\n\\n.table-project-information > tbody > tr:first-child {\\n  border-top: 0; }\\n\\n.table-project-information > tbody > tr > td {\\n  border-top: 0; }\\n\\n.panel-profile .panel-heading {\\n  height: 150px;\\n  background-size: cover;\\n  widows: 150px; }\\n\\n.panel-profile {\\n  width: 200px;\\n  border-radius: 25px;\\n  padding: 5px;\\n  float: right;\\n  margin-top: 20px;\\n  margin-right: 50px;\\n  color: green; }\\n\\n.mb10 {\\n  margin-bottom: 10px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ListProjectService } from '../../../../shared/services/project-service/list-project.service';\n\n@Component({\n    selector: 'app-configure-project',\n    templateUrl: './configure-project.component.html',\n    styleUrls: ['./configure-project.component.scss']\n})\nexport class ConfigureProjectComponent implements OnInit {\n\n    private project: any = null;\n\n    constructor(\n        private route: ActivatedRoute,\n        private listProjectService: ListProjectService\n    ) { }\n\n    ngOnInit() {\n        this.route.paramMap.subscribe(data => {\n            // console.log(data.get('id'));\n            this.listProjectService.getProject(data.get('id')).subscribe(data => {\n                this.project = data;\n                // console.log(this.project);\n            }, error => {\n                console.log(error);\n            });\n        }\n        );\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <h4>Register project</h4>\\n    <hr/>\\n\\n    <form [formGroup]=\\\"form\\\" #addProjectForm=\\\"ngForm\\\" name=\\\"addProjectForm\\\" novalidate (ngSubmit)=\\\"save(addProjectForm.value)\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"projectName\\\">Project Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"projectName\\\" name=\\\"projectName\\\" [(ngModel)]=\\\"project.name\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                        aria-describedby=\\\"projectName\\\" placeholder=\\\"E.g. CROSSMINER\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"description\\\">Description</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"project.description\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                        rows=\\\"4\\\" placeholder=\\\"E.g.\\\"></textarea>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"homePage\\\">HomePage</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"homePage\\\" name=\\\"homePage\\\" [(ngModel)]=\\\"project.homepage\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                        ngModel placeholder=\\\"E.g. www.crossminer.org\\\">\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"informationSources\\\">Information Sources</label>\\n                    <br/>\\n                    <small>Click the button below to add new information sources to the project.</small>\\n                    <br/>\\n                    <br/>\\n                    <small>Version Control Systems</small>\\n                    <ul class=\\\"pagination\\\">\\n                        <li>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('vcs', 'git')\\\">\\n                                <span>Git</span>\\n                            </button>\\n                        </li>\\n                        <li>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('vcs', 'svn')\\\">\\n                                <span>SVN</span>\\n                            </button>\\n                        </li>\\n                    </ul>\\n                    <small>Issue Tracking Systems</small>\\n                    <ul class=\\\"pagination\\\">\\n                        <li>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('bts', 'bugzilla')\\\">\\n                                <span>Bugzilla</span>\\n                            </button>\\n                        </li>\\n                        <li>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('bts', 'sourceforge')\\\">\\n                                <span>SourceForge</span>\\n                            </button>\\n                        </li>\\n                        <li>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('bts', 'redmine')\\\">\\n                                <span>Redmine</span>\\n                            </button>\\n                        </li>\\n                    </ul>\\n                    <small>Communication Channels</small>\\n                    <ul class=\\\"pagination\\\">\\n                        <li>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('communication_channels', 'nntp')\\\">\\n                                <span>NNTP</span>\\n                            </button>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-6 col-md-offset-6 col-md-6 col-md-offset-6 col-lg-6 col-lg-offset-6\\\">\\n                <div formArrayName=\\\"vcs\\\">\\n                    <div *ngFor=\\\"let elem of form.get('vcs')['controls'];let i=index;\\\">\\n                        <div [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    <label>{{form.get('vcs').value[i].type | uppercase}} Repository</label>\\n                                    <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('vcs', i)\\\">\\n                                        <i class=\\\"fa fa-times\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"form-group\\\" [hidden]=true>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"type\\\" formControlName=\\\"type\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"url\\\">URL</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" formControlName=\\\"url\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <br/>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div formArrayName=\\\"bts\\\">\\n                    <div *ngFor=\\\"let elem of form.get('bts')['controls'];let i=index;\\\">\\n                        <div [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    <label>{{form.get('bts').value[i].type | uppercase}}</label>\\n                                    <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('bts', i)\\\">\\n                                        <i class=\\\"fa fa-times\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"form-group\\\" [hidden]=true>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"type\\\" formControlName=\\\"type\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"url\\\">URL</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" formControlName=\\\"url\\\">\\n                                    </div>\\n                                    <div *ngIf=\\\"form.get('bts').value[i].type === 'bugzilla'\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label for=\\\"product\\\">Product</label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product\\\" name=\\\"product\\\" formControlName=\\\"product\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label for=\\\"component\\\">Component</label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"component\\\" name=\\\"component\\\" formControlName=\\\"component\\\">\\n                                        </div>\\n                                    </div>\\n                                    <div *ngIf=\\\"form.get('bts').value[i].type === 'redmine'\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label for=\\\"name\\\">Name</label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label for=\\\"project\\\">Project</label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" name=\\\"project\\\" formControlName=\\\"project\\\">\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <br/>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div formArrayName=\\\"communication_channels\\\">\\n                    <div *ngFor=\\\"let elem of form.get('communication_channels')['controls'];let i=index;\\\">\\n                        <div [formGroupName]=\\\"i\\\">\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-header\\\">\\n                                    <label>Communication Channels</label>\\n                                    <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('communication_channels', i)\\\">\\n                                        <i class=\\\"fa fa-times\\\"></i>\\n                                    </span>\\n                                </div>\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"form-group\\\" [hidden]=true>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"type\\\" formControlName=\\\"type\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\" [hidden]=true>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\">\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"url\\\">URL</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" formControlName=\\\"url\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <br/>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!addProjectForm.form.valid || isSaving\\\" class=\\\"btn btn-primary\\\" class=\\\"block\\\">Register project</button>\\n        </div>\\n    </form>\\n</div>\"","module.exports = \".block {\\n  display: block;\\n  width: 100%;\\n  border: none;\\n  color: #fff;\\n  background-color: #1074B2;\\n  border-color: #357ebd;\\n  padding: 14px 28px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormGroup, FormBuilder } from '@angular/forms';\nimport { Project } from '../../project.model';\nimport { CreateProjectService } from '../../../../shared/services/project-service/create-project.service';\n\n@Component({\n  selector: 'app-create-project',\n  templateUrl: './create-project.component.html',\n  styleUrls: ['./create-project.component.scss']\n})\nexport class CreateProjectComponent implements OnInit {\n\n  form: FormGroup;\n  project: Project = {};\n  private isSaving: boolean;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private createProjectService: CreateProjectService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.isSaving = false;\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      vcs: this.formBuilder.array([]),\n      communication_channels: this.formBuilder.array([]),\n      bts: this.formBuilder.array([])\n    });\n  }\n\n  addInformationSource(source: string, type: string) {\n    const control = <FormArray>this.form.get(source);\n    switch (source) {\n      case 'vcs':\n        control.push(this.createVersionControlSystems(type));\n        break;\n      case 'bts':\n        control.push(this.createIssueTrackingSystems(type));\n        break;\n      case 'communication_channels':\n        control.push(this.createCommunicationChannels(type));\n      default:\n        break;\n    }\n  }\n\n  createVersionControlSystems(type: string) {\n    switch (type) {\n      case 'git':\n        return this.formBuilder.group({\n          'type': [type],\n          'url': ['']\n        });\n      case 'svn':\n        return this.formBuilder.group({\n          'type': [type],\n          'url': ['']\n        });\n      default:\n        break;\n    }\n\n  }\n\n  createCommunicationChannels(type: string) {\n    return this.formBuilder.group({\n      'type': [type],\n      'name': ['NNTP'],\n      'url': [''],\n    });\n  }\n\n  createIssueTrackingSystems(type: string) {\n    switch (type) {\n      case 'bugzilla':\n        return this.formBuilder.group({\n          'type': [type],\n          'product': [''],\n          'component': [''],\n          'url': [''],\n        });\n      case 'sourceforge':\n        return this.formBuilder.group({\n          'type': [type],\n          'url': ['']\n        });\n      case 'redmine':\n        return this.formBuilder.group({\n          'type': [type],\n          'name': [''],\n          'project': [''],\n          'url': ['']\n        });\n      default:\n        break;\n    }\n  }\n\n  removeInformationSource(sourceName: string, index: number) {\n    const control = <FormArray>this.form.get(sourceName);\n    control.removeAt(index);\n  }\n\n  save() {\n    this.isSaving = true;\n    this.project.vcs = this.saveInformationSources('vcs');\n    this.project.bts = this.saveInformationSources('bts');\n    this.project.communication_channels = this.saveInformationSources('communication_channels');\n    this.createProjectService.createProject(this.project).subscribe(resp => {\n      console.log(resp)\n      debugger\n    }, error => {\n      console.log(error)\n    })\n\n  }\n\n  saveInformationSources(sourceName: string) {\n    const control = <FormArray>this.form.get(sourceName);\n    return control.value;\n  }\n\n}","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <h4>Import project</h4>\\n            <hr>\\n            <div>\\n                <span>If your project is hosted on Eclipse, SourceForge, or GitHub, you can simply paste the URL below and we'll\\n                    add it.</span>\\n                <br/>\\n                <span>E.g.\\n                    <code>https://projects.eclipse.org/projects/modeling.epsilon</code> or\\n                    <code>https://github.com/jrwilliams/gif-hook</code>\\n                </span>\\n            </div>\\n            <br/>\\n            <div>\\n                <form #importProjectForm=\\\"ngForm\\\" novalidate name=\\\"importProjectForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"projectName\\\">URL</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"url\\\" id=\\\"url\\\" [(ngModel)]=\\\"project.url\\\" aria-describedby=\\\"url\\\" placeholder=\\\"URL\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!importProjectForm.form.valid || isSaving\\\" class=\\\"btn btn-primary\\\">Import project</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../project.model';\nimport { ImportProjectService } from '../../../../shared/services/project-service/import-project.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-import-project',\n    templateUrl: './import-project.component.html',\n    styleUrls: ['./import-project.component.scss']\n})\nexport class ImportProjectComponent implements OnInit {\n\n    private project: Project = {};\n    private isSaving: boolean;\n\n    constructor(\n        private router: Router,\n        private importProjectService: ImportProjectService\n    ) { }\n\n    ngOnInit() {\n        this.isSaving = false;\n    }\n\n    save() {\n        this.isSaving = true;\n        this.importProjectService.importProject(this.project).subscribe(resp => {\n            console.log(resp);\n        }, error => {\n            console.log(error);\n        });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectComponent } from './project.component';\nimport { ImportProjectComponent } from './components/import-project/import-project.component';\nimport { CreateProjectComponent } from './components/create-project/create-project.component';\nimport { ConfigureProjectComponent } from './components/configure-project/configure-project.component';\n\n\nconst routes: Routes = [\n    {\n        path: '', component: ProjectComponent,\n    },\n    {\n        path: 'create', component: CreateProjectComponent\n    },\n    {\n        path: 'import', component: ImportProjectComponent\n    },\n    {\n        path: 'configure/:id', component: ConfigureProjectComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectRoutingModule { }\n","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\" />\\n\\n<div class=\\\"page-header\\\">\\n    <h1>Projects Analysed by CROSSMINER</h1>\\n    <hr/>\\n  </div>\\n<div class=\\\"project-table\\\">\\n  <div *ngFor=\\\"let project of projectList\\\" class=\\\"project-option\\\" [routerLink]=\\\"['/project/configure/', project.shortName]\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <i class=\\\"material-icons\\\" style=\\\"float: left;\\\">layers</i>\\n        <h1> {{project.name}}</h1>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        {{project.description}}\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <h2>\\n          <span class=\\\"badge badge-dark\\\">100%</span>\\n        </h2>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"@import url(https://fonts.googleapis.com/css?family=Josefin+Sans:400,300,300italic,400italic,600,700,600italic,700italic);\\nbody {\\n  font-family: \\\"Josefin Sans\\\", sans-serif;\\n  line-height: 1;\\n  height: 100%;\\n  background: #eee; }\\n.project-table {\\n  display: table;\\n  width: 95%;\\n  padding: 10px; }\\n.project-table .project-option {\\n  width: 100%;\\n  background: white;\\n  float: left;\\n  padding: 1%;\\n  vertical-align: middle;\\n  transition: all .3s ease-in-out;\\n  box-shadow: 0px 2px 30px rgba(0, 0, 0, 0.3);\\n  margin: 1%; }\\n.project-table .project-option:hover {\\n  cursor: pointer;\\n  box-shadow: 0px 2px 30px rgba(0, 0, 0, 0.3);\\n  -webkit-transform: scale(1.04);\\n  transform: scale(1.04); }\\n.project-table .project-option:hover i, .project-table .project-option:hover h1, .project-table .project-option:hover span, .project-table .project-option:hover b {\\n  color: #76a2ed; }\\n.project-table .project-option:hover .front {\\n  opacity: 0;\\n  visibility: hidden; }\\n.project-table .project-option:hover .back {\\n  opacity: 1 !important;\\n  visibility: visible !important; }\\n.project-table .project-option:hover .back a.button {\\n  -webkit-transform: translateY(0px) !important;\\n  transform: translateY(0px) !important; }\\n.project-table .project-option hr {\\n  border: none;\\n  border-bottom: 1px solid #F0F0F0; }\\n.project-table .project-option i {\\n  font-size: 3rem;\\n  color: #D8D8D8;\\n  transition: all .3s ease-in-out;\\n  margin: 15px; }\\n.project-table .project-option h1 {\\n  margin: 10px 0;\\n  color: #212121;\\n  transition: all .3s ease-in-out; }\\n.project-table .project-option p {\\n  color: #999;\\n  padding: 0 10px;\\n  line-height: 1.3; }\\n@media screen and (max-width: 600px) {\\n  .project-table .project-option {\\n    padding: 5%;\\n    width: 90%; }\\n  .project-table .project-option:nth-child(even) {\\n    margin: 30px 0 !important; } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ListProjectService } from '../../shared/services/project-service/list-project.service';\nimport { Project } from './project.model';\nimport { ResponseWrapper } from '../../shared/models/response-wrapper.model';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\n\nexport class ProjectComponent implements OnInit {\n\n  private projectList: any;\n  \n  constructor(private listProjectService: ListProjectService) { }\n\n  ngOnInit() {\n    this.listProjectService.listProjects().subscribe((resp) => {\n        this.projectList = resp;\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProjectRoutingModule } from './project-routing.module';\nimport { ProjectComponent } from './project.component';\nimport { ImportProjectComponent } from './components/import-project/import-project.component';\nimport { CreateProjectComponent } from './components/create-project/create-project.component';\nimport { ConfigureProjectComponent } from './components/configure-project/configure-project.component';\n\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProjectRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ProjectComponent, ImportProjectComponent, CreateProjectComponent,ConfigureProjectComponent]\n})\nexport class ProjectModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { IProject } from '../../../layout/project/project.model';\nimport { LocalStorageService } from '../authentication/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateProjectService {\n\n  private resourceUrl = environment.SERVER_API_URL + '/administration';\n  private projects = 'projects';\n  private create = 'create';\n  private jwtToken: string = null;\n    \n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService,\n  ) { }\n\n  createProject(project: IProject) {\n    if (this.jwtToken == null) {\n      this.jwtToken = this.localStorageService.loadToken();\n    }\n    // console.log(project);\n    return this.httpClient.post(`${this.resourceUrl}/${this.projects}/${this.create}`, project,\n    { headers: new HttpHeaders({ 'Authorization': this.jwtToken }) });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Project } from '../../../layout/project/project.model';\nimport { environment } from '../../../../environments/environment';\nimport { LocalStorageService } from '../authentication/local-storage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ImportProjectService {\n\n    private resourceUrl = environment.SERVER_API_URL + '/administration';\n    private projects = 'projects';\n    private import = 'import';\n    private jwtToken: string = null;\n\n    constructor(\n        private httpClient: HttpClient,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    importProject(project: Project) {\n        if (this.jwtToken == null) {\n            this.jwtToken = this.localStorageService.loadToken();\n        }\n        return this.httpClient.post(`${this.resourceUrl}/${this.projects}/${this.import}`, project,\n            { headers: new HttpHeaders({ 'Authorization': this.jwtToken }) });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { LocalStorageService } from '../authentication/local-storage.service';\nimport { Project } from '../../../layout/project/project.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ListProjectService {\n\n    private resourceUrl = environment.SERVER_API_URL + '/administration';\n    private listServiceUrl = 'projects';\n    private projectServiceUrl = 'projects/p';\n    private jwtToken: string = null;\n    private project: Project;\n\n    constructor(\n        private httpClient: HttpClient,\n        private localStorageService: LocalStorageService\n    ) { }\n\n    listProjects() {\n        if (this.jwtToken == null) {\n            this.jwtToken = this.localStorageService.loadToken();\n        }\n        // console.log(`${this.resourceUrl}/${this.listServiceUrl}`);\n        // console.log(this.jwtToken);\n        return this.httpClient.get(`${this.resourceUrl}/${this.listServiceUrl}`,\n            { headers: new HttpHeaders({ 'Authorization': this.jwtToken })});\n    }\n\n    getProject(projectid:string){\n        if (this.jwtToken == null) {\n            this.jwtToken = this.localStorageService.loadToken();\n        }\n        // console.log(`${this.resourceUrl}/${this.projectServiceUrl}/${projectid}`);   \n        return this.httpClient.get(`${this.resourceUrl}/${this.projectServiceUrl}/${projectid}`, { headers: new HttpHeaders({ 'Authorization': this.jwtToken })});\n    }\n\n}\n"],"sourceRoot":""}