{"version":3,"sources":["webpack:///./src/app/layout/project/components/add-project/add-project.component.html","webpack:///./src/app/layout/project/components/add-project/add-project.component.scss","webpack:///./src/app/layout/project/components/add-project/add-project.component.ts","webpack:///./src/app/layout/project/components/import-project/import-project.component.html","webpack:///./src/app/layout/project/components/import-project/import-project.component.scss","webpack:///./src/app/layout/project/components/import-project/import-project.component.ts","webpack:///./src/app/layout/project/project-routing.module.ts","webpack:///./src/app/layout/project/project.component.html","webpack:///./src/app/layout/project/project.component.scss","webpack:///./src/app/layout/project/project.component.ts","webpack:///./src/app/layout/project/project.module.ts","webpack:///./src/app/shared/services/api-server/add-project.service.ts","webpack:///./src/app/shared/services/api-server/import-project.service.ts"],"names":[],"mappings":"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","file":"project-project-module.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <h4>Register project</h4>\\n            <hr>\\n        </div>\\n        <div class=\\\"col-sm-6 col-md-6 col-lg-6\\\">\\n            <div>\\n                <form #addProjectForm=\\\"ngForm\\\" name=\\\"addProjectForm\\\" novalidate (ngSubmit)=\\\"save(addProjectForm.value)\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"projectName\\\">Project Name</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"projectName\\\" name=\\\"projectName\\\" [(ngModel)]=\\\"project.projectName\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                            aria-describedby=\\\"projectName\\\" placeholder=\\\"E.g. SCAVA\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"description\\\">Description</label>\\n                        <textarea class=\\\"form-control\\\" id=\\\"description\\\" name=\\\"description\\\" [(ngModel)]=\\\"project.description\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                            rows=\\\"4\\\" placeholder=\\\"E.g.\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"homePage\\\">HomePage</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"homePage\\\" name=\\\"homePage\\\" [(ngModel)]=\\\"project.homePage\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                            ngModel placeholder=\\\"E.g. www.scava.org\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"informationSources\\\">Information Sources</label>\\n                        <br/>\\n                        <small>Click the button below to add new information sources to the project.</small>\\n                        <br/>\\n                        <br/>\\n                        <small>Version Control Systems</small>\\n                        <ul class=\\\"pagination\\\">\\n                            <li>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('git')\\\">\\n                                    <span>Git</span>\\n                                </button>\\n                            </li>\\n                            <li>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('svn')\\\">\\n                                    <span>SVN</span>\\n                                </button>\\n                            </li>\\n                        </ul>\\n                        <small>Issue Tracking Systems</small>\\n                        <ul class=\\\"pagination\\\">\\n                            <li>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('bugzilla')\\\">\\n                                    <span>Bugzilla</span>\\n                                </button>\\n                            </li>\\n                            <li>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('sourceforge')\\\">\\n                                    <span>SourceForge</span>\\n                                </button>\\n                            </li>\\n                            <li>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('redmine')\\\">\\n                                    <span>Redmine</span>\\n                                </button>\\n                            </li>\\n                        </ul>\\n                        <small>Communication Channels</small>\\n                        <ul class=\\\"pagination\\\">\\n                            <li>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addInformationSource('nntp')\\\">\\n                                    <span>NNTP</span>\\n                                </button>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n        <div [formGroup]=\\\"form\\\" class=\\\"col-sm-6 col-md-offset-6 col-md-6 col-md-offset-6 col-lg-6 col-lg-offset-6\\\">\\n            <div formArrayName=\\\"git\\\">\\n                <div *ngFor=\\\"let elem of form.get('git')['controls'];let i=index;\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <label>Git Repository</label>\\n                                <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('git')\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </span>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"homePage\\\">URL</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" formControlName=\\\"url\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div formArrayName=\\\"svn\\\">\\n                <div *ngFor=\\\"let elem of form.get('svn')['controls'];let i=index;\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <label>Subversion Repository</label>\\n                                <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('svn')\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </span>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"homePage\\\">URL</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\" formControlName=\\\"url\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div formArrayName=\\\"bugzilla\\\">\\n                <div *ngFor=\\\"let elem of form.get('bugzilla')['controls'];let i=index;\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <label>Bugzilla</label>\\n                                <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('bugzilla')\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </span>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"homePage\\\">URL</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"product\\\">Product</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product\\\" name=\\\"product\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"component\\\">Component</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"component\\\" name=\\\"component\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div formArrayName=\\\"sourceforge\\\">\\n                <div *ngFor=\\\"let elem of form.get('sourceforge')['controls'];let i=index;\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <label>SourceForge Issues</label>\\n                                <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('sourceforge')\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </span>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"url\\\">URL</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div formArrayName=\\\"redmine\\\">\\n                <div *ngFor=\\\"let elem of form.get('redmine')['controls'];let i=index;\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <label>Redmine</label>\\n                                <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('redmine')\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </span>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"url\\\">URL</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"name\\\">Name</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"project\\\">Project</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"project\\\" name=\\\"project\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <br/>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div formArrayName=\\\"nntp\\\">\\n                <div *ngFor=\\\"let elem of form.get('nntp')['controls'];let i=index;\\\">\\n                    <div [formGroupName]=\\\"i\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <label>Communication Channels</label>\\n                                <span class=\\\"pull-right clickable close-icon\\\" data-effect=\\\"fadeOut\\\" (click)=\\\"removeInformationSource('nntp')\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </span>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label for=\\\"url\\\">URL</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"url\\\" name=\\\"url\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <br/>\\n    <div class=\\\"row\\\">\\n        <button type=\\\"button\\\" class=\\\"block\\\">Register</button>\\n    </div>\\n</div>\\n\"","module.exports = \".block {\\n  display: block;\\n  width: 100%;\\n  border: none;\\n  color: #fff;\\n  background-color: #1074B2;\\n  border-color: #357ebd;\\n  padding: 14px 28px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormGroup, FormBuilder } from '@angular/forms';\nimport { Project } from '../../project.model';\nimport { AddProjectService } from '../../../../shared/services/api-server/add-project.service';\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.scss']\n})\nexport class AddProjectComponent implements OnInit {\n\n  form: FormGroup;\n  project: Project = {};\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private addProjectService: AddProjectService,\n  ) {\n   }\n\n  ngOnInit() {\n      this.buildForm();\n  }\n\n  buildForm() {\n    this.form = this.formBuilder.group({\n      git: this.formBuilder.array([]),\n      svn: this.formBuilder.array([]),\n      bugzilla: this.formBuilder.array([]),\n      sourceforge: this.formBuilder.array([]),\n      redmine: this.formBuilder.array([]),\n      nntp: this.formBuilder.array([]),\n    });\n  }\n\n  addInformationSource(source: string) {\n    const control = <FormArray>this.form.get(source);\n    switch (source) {\n        case 'git':\n            control.push(this.createGitRepository());\n            break;\n        case 'svn':\n            control.push(this.createSVNRepository());\n            break;\n        case 'bugzilla':\n            control.push(this.createBugzilla());\n            break;\n        case 'sourceforge':\n            control.push(this.createSourceForgeIssues());\n            break;\n        case 'redmine':\n            control.push(this.createRedmine());\n            break;\n        case 'nntp':\n            control.push(this.createNNTP());\n            break;\n        default:\n            break;\n    }\n  }\n\n  createGitRepository() {\n    return this.formBuilder.group({\n      'url': ['']\n    });\n  }\n\n  createSVNRepository() {\n    return this.formBuilder.group({\n      'url': ['']\n    });\n  }\n\n  createBugzilla() {\n    return this.formBuilder.group({\n      'url': [''],\n      'product': [''],\n      'component': [''],\n    });\n  }\n\n  createSourceForgeIssues() {\n    return this.formBuilder.group({\n      'url': ['']\n    });\n  }\n\n  createRedmine() {\n    return this.formBuilder.group({\n      'url': [''],\n      'name': [''],\n      'project': [''],\n    });\n  }\n\n  createNNTP() {\n    return this.formBuilder.group({\n      'url': ['']\n    });\n  }\n\n  removeInformationSource(sourceName: string, index: number) {\n      const control = <FormArray>this.form.get(sourceName);\n      control.removeAt(index);\n  }\n\n  save() {\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\n            <h4>Import project</h4>\\n            <hr>\\n            <div>\\n                <span>If your project is hosted on Eclipse, SourceForge, or GitHub, you can simply paste the URL below and we'll\\n                    add it.</span>\\n                <br/>\\n                <span>E.g.\\n                    <code>https://projects.eclipse.org/projects/modeling.epsilon</code> or\\n                    <code>https://github.com/jrwilliams/gif-hook</code>\\n                </span>\\n            </div>\\n            <br/>\\n            <div>\\n                <form #importProjectForm=\\\"ngForm\\\" novalidate name=\\\"importProjectForm\\\" novalidate (ngSubmit)=\\\"save()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"projectName\\\">URL</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"url\\\" id=\\\"url\\\" [(ngModel)]=\\\"project.url\\\" aria-describedby=\\\"url\\\" placeholder=\\\"URL\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button type=\\\"submit\\\" [disabled]=\\\"!importProjectForm.form.valid || isSaving\\\" class=\\\"btn btn-primary\\\">Import project</button>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../../project.model';\nimport { ImportProjectService } from '../../../../shared/services/api-server/import-project.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-import-project',\n    templateUrl: './import-project.component.html',\n    styleUrls: ['./import-project.component.scss']\n})\nexport class ImportProjectComponent implements OnInit {\n\n    private project: Project = {};\n    private isSaving = false;\n\n    constructor(\n        private router: Router,\n        private importProjectService: ImportProjectService\n    ) { }\n\n    ngOnInit() {\n    }\n\n    save() {\n        this.isSaving = true;\n        this.importProjectService.importProject(this.project).subscribe(resp => {\n            console.log(resp);\n        }, error => {\n            console.log(error);\n        });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectComponent } from './project.component';\nimport { ImportProjectComponent } from './components/import-project/import-project.component';\nimport { AddProjectComponent } from './components/add-project/add-project.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: ProjectComponent,\n    },\n    {\n        path: 'add', component: AddProjectComponent\n    },\n    {\n        path: 'import', component: ImportProjectComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProjectRoutingModule { }\n","module.exports = \"<p>\\n  projects works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProjectRoutingModule } from './project-routing.module';\nimport { ProjectComponent } from './project.component';\nimport { ImportProjectComponent } from './components/import-project/import-project.component';\nimport { AddProjectComponent } from './components/add-project/add-project.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProjectRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ProjectComponent, ImportProjectComponent, AddProjectComponent]\n})\nexport class ProjectModule { }\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { SharedDataService } from '../shared/shared-data.service';\nimport { Project } from '../../../layout/project/project.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddProjectService {\n\n  private resourceUrl = environment.SERVER_API_URL + '/administration';\n  private projects = 'projects';\n  private add = 'add';\n  private jwtToken: string = null;\n    \n  constructor(\n    private httpClient: HttpClient,\n    private sharedDataService: SharedDataService,\n  ) { }\n\n  addProject(project: Project) {\n    if (this.jwtToken == null) {\n      this.jwtToken = this.sharedDataService.loadToken();\n    }\n    return this.httpClient.post(`${this.resourceUrl}/${this.projects}/${this.add}`, project,\n    { headers: new HttpHeaders({ 'Authorization': this.jwtToken }) });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { SharedDataService } from '../shared/shared-data.service';\nimport { Project } from '../../../layout/project/project.model';\nimport { environment } from '../../../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ImportProjectService {\n\n    private resourceUrl = environment.SERVER_API_URL + '/administration';\n    private projects = 'projects';\n    private import = 'import';\n    private jwtToken: string = null;\n\n    constructor(\n        private httpClient: HttpClient,\n        private sharedDataService: SharedDataService\n    ) { }\n\n    importProject(project: Project) {\n        if (this.jwtToken == null) {\n            this.jwtToken = this.sharedDataService.loadToken();\n        }\n        return this.httpClient.post(`${this.resourceUrl}/${this.projects}/${this.import}`, project,\n            { headers: new HttpHeaders({ 'Authorization': this.jwtToken }) });\n    }\n}\n"],"sourceRoot":""}