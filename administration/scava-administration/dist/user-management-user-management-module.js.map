{"version":3,"sources":["webpack:///./src/app/layout/user-management/user-management-delete-dialog/user-management-delete-dialog.component.html","webpack:///./src/app/layout/user-management/user-management-delete-dialog/user-management-delete-dialog.component.ts","webpack:///./src/app/layout/user-management/user-management-routing.module.ts","webpack:///./src/app/layout/user-management/user-management-update/user-management-update.component.html","webpack:///./src/app/layout/user-management/user-management-update/user-management-update.component.scss","webpack:///./src/app/layout/user-management/user-management-update/user-management-update.component.ts","webpack:///./src/app/layout/user-management/user-management.component.html","webpack:///./src/app/layout/user-management/user-management.component.scss","webpack:///./src/app/layout/user-management/user-management.component.ts","webpack:///./src/app/layout/user-management/user-management.module.ts","webpack:///./src/app/layout/user-management/user-model.ts","webpack:///./src/app/shared/services/user-management/user-management.service.ts"],"names":[],"mappings":"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","file":"user-management-user-management-module.js","sourcesContent":["module.exports = \"<form name=\\\"deleteForm\\\" (ngSubmit)=\\\"confirmDelete(user.login)\\\">\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Confirm delete operation</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\"\\n            (click)=\\\"clear()\\\">&times;</button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete this User?</p>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"clear()\\\">\\n            <i class=\\\"fa fa-ban\\\"></i>&nbsp;<span>Cancel</span>\\n        </button>&nbsp;\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">\\n            <i class=\\\"fa fa-times\\\"></i>&nbsp;<span>Delete</span>\\n        </button>\\n    </div>\\n</form>\\n\"","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UserManagementService } from '../../../shared/services/user-management/user-management.service';\nimport { User } from '../user-model';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'jhi-user-mgmt-delete-dialog',\n    templateUrl: './user-management-delete-dialog.component.html'\n})\nexport class UserMgmtDeleteDialogComponent {\n    user: User;\n\n    constructor(\n        private userManagementService: UserManagementService, \n        public activeModal: NgbActiveModal\n    ) { }\n\n    clear() {\n        this.activeModal.dismiss('cancel');\n    }\n\n    confirmDelete(login) {\n        this.userManagementService.delete(login).subscribe(response => {\n            this.activeModal.dismiss(true);\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserManagementComponent } from './user-management.component';\nimport { UserManagementUpdateComponent } from './user-management-update/user-management-update.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', \n    component: UserManagementComponent,\n  },\n  {\n    path: ':login/edit',\n    component: UserManagementUpdateComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserManagementRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-8\\\">\\n      \\n      <form name=\\\"editForm\\\" role=\\\"form\\\" novalidate (ngSubmit)=\\\"save()\\\" #editForm=\\\"ngForm\\\">\\n        <h2>Edit a user</h2>\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Login</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"login\\\" [(ngModel)]=\\\"user.login\\\" required minlength=\\\"1\\\" \\n                maxlength=\\\"50\\\" pattern=\\\"^[_.@A-Za-z0-9-]*$\\\">\\n            <!--\\n            <div *ngIf=\\\"loginInput.dirty && loginInput.invalid\\\">\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"loginInput.errors.required\\\">\\n                This field is required.\\n              </small>\\n\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"loginInput.errors.maxlength\\\">\\n                This field cannot be longer than 50 characters.\\n              </small>\\n\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"loginInput.errors.pattern\\\">\\n                This field can only contain letters, digits and e-mail addresses.\\n              </small>\\n            </div>\\n            -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Email</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" minlength=\\\"5\\\" required\\n              maxlength=\\\"254\\\" email>\\n            <!--\\n            <div *ngIf=\\\"emailInput.dirty && emailInput.invalid\\\">\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"emailInput.errors.required\\\">\\n                This field is required.\\n              </small>\\n\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"emailInput.errors.maxlength\\\">\\n                This field cannot be longer than 100 characters.\\n              </small>\\n\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"emailInput.errors.minlength\\\">\\n                This field is required to be at least 5 characters.\\n              </small>\\n\\n              <small class=\\\"form-text text-danger\\\" *ngIf=\\\"emailInput.errors.email\\\">\\n                Your email is invalid.\\n              </small>\\n            </div>\\n            -->\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"activated\\\">\\n              <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"activated\\\" name=\\\"activated\\\" [(ngModel)]=\\\"user.activated\\\" >\\n              <span>Activated</span>\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label>Profiles</label>\\n            <select class=\\\"form-control\\\" multiple name=\\\"authority\\\" [(ngModel)]=\\\"user.authorities\\\">\\n              <option *ngFor=\\\"let authority of authorities\\\" [value]=\\\"authority\\\">{{authority}}</option>\\n              <option value=\\\"\\\"></option>\\n            </select>\\n          </div>\\n        </div>\\n        <div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"previousState()\\\">\\n            <i class=\\\"fa fa-ban\\\"></i>&nbsp;\\n            <span>Cancel</span>\\n          </button>&nbsp;\\n          <button type=\\\"submit\\\" [disabled]=\\\"editForm.form.invalid || isSaving\\\" class=\\\"btn btn-primary\\\">\\n            <i class=\\\"fa fa-save\\\"></i>&nbsp;\\n            <span>Save</span>\\n          </button>\\n        </div>\\n      </form>\\n      \\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserManagementService } from '../../../shared/services/user-management/user-management.service';\n\n@Component({\n  selector: 'app-user-management-update',\n  templateUrl: './user-management-update.component.html',\n  styleUrls: ['./user-management-update.component.scss']\n})\nexport class UserManagementUpdateComponent implements OnInit {\n\n  private user: User;\n  private authorities = ['ROLE_ADMIN', 'ROLE_PROJECT_MANAGER'];\n  isSaving: boolean;\n\n  constructor(\n    private userManagementService: UserManagementService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loadAll();\n  }\n\n  loadAll() {\n    this.isSaving = false;\n    this.user= new User();\n    this.route.paramMap.subscribe(\n      (data) => {\n        this.userManagementService.find(data.get('login')).subscribe(\n          (user) => {\n            this.user = user;\n          })\n      });\n  }\n\n  save() {\n    this.isSaving = true;\n    if(this.user.authorities.includes('')) {\n      this.user.authorities.pop();\n    }\n    this.user.authorities.unshift('ROLE_USER');\n    this.userManagementService.update(this.user).subscribe(\n      (success) => this.onSaveSuccess(success),\n      (error) => this.onSaveError()\n    )\n  }\n\n  previousState() {\n    this.router.navigate(['/user-management']);\n  }\n\n  private onSaveSuccess(result) {\n    this.isSaving = true;\n    this.previousState();\n  }\n\n  private onSaveError() {\n    this.isSaving = false;\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"table-responsive\\\">\\n    <table class=\\\"table table-striped\\\">\\n      <thead>\\n        <tr>\\n          <th>\\n            <span>Login</span>\\n          </th>\\n          <th>\\n            <span>Email</span>\\n          </th>\\n          <th>\\n          </th>\\n          <th>\\n            <span>Profiles</span>\\n          </th>\\n          <th>\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let user of users\\\">\\n          <td>{{user.login}}</td>\\n          <td>{{user.email}}</td>\\n          <td>\\n            <button class=\\\"btn btn-danger btn-sm\\\" *ngIf=\\\"!user.activated\\\" (click)=\\\"setActive(user, true)\\\">Deactivated</button>\\n            <button class=\\\"btn btn-success btn-sm\\\" *ngIf=\\\"user.activated\\\" (click)=\\\"setActive(user, false)\\\">Activated</button>\\n\\n          </td>\\n          <td>\\n            <div *ngFor=\\\"let authorithy of user.authorities\\\">\\n              <div *ngIf=\\\"authorithy !== 'ROLE_USER'\\\">\\n                {{authorithy}}\\n              </div>\\n              <div *ngIf=\\\"authorithy == 'ROLE_USER' && user.authorities.length == 1\\\">\\n                  NO ROLES ARE ASSINGED TO THIS USER\\n              </div>\\n            </div>\\n          </td>\\n          <td class=\\\"text-right\\\">\\n            <div class=\\\"btn-group flex-btn-group-container\\\">\\n              <button type=\\\"submit\\\" [routerLink]=\\\"['./', user.login, 'edit']\\\" queryParamsHandling=\\\"merge\\\" class=\\\"btn btn-primary btn-sm\\\">\\n                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\n                <span class=\\\"d-none d-md-inline\\\">Edit</span>\\n              </button>\\n              <button type=\\\"button\\\" (click)=\\\"deleteUser(user)\\\" class=\\\"btn btn-danger btn-sm\\\">\\n                <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>&nbsp;\\n                <span class=\\\"d-none d-md-inline\\\">Delete</span>\\n              </button>\\n            </div>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\"","module.exports = \".switch input {\\n  display: none; }\\n\\n.switch {\\n  display: inline-block;\\n  width: 50px;\\n  height: 20px;\\n  margin: 4px;\\n  -webkit-transform: translateY(50%);\\n          transform: translateY(50%);\\n  position: relative; }\\n\\n.slider {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  border-radius: 30px;\\n  box-shadow: 0 0 0 2px red, 0 0 4px red;\\n  cursor: pointer;\\n  border: 2px solid transparent;\\n  overflow: hidden;\\n  transition: .4s; }\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  width: 100%;\\n  height: 100%;\\n  background: red;\\n  border-radius: 30px;\\n  -webkit-transform: translateX(-30px);\\n          transform: translateX(-30px);\\n  transition: .4s; }\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(30px);\\n          transform: translateX(30px);\\n  background: #0069d9; }\\n\\ninput:checked + .slider {\\n  box-shadow: 0 0 0 2px #0069d9, 0 0 2px #0069d9; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserManagementService } from '../../shared/services/user-management/user-management.service';\nimport { User } from './user-model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { UserMgmtDeleteDialogComponent } from './user-management-delete-dialog/user-management-delete-dialog.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.scss']\n})\nexport class UserManagementComponent implements OnInit {\n\n  private users: User[];\n\n  constructor(\n    private userManagementService: UserManagementService,\n    public modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.loadAll();\n  }\n\n  loadAll() {\n    this.userManagementService.query().subscribe(\n      (success) => this.onSuccess(success),\n      (error) => this.onError(error)\n    );\n  }\n\n  setActive(user, isActivated) {\n    user.activated = isActivated;\n    this.userManagementService.update(user).subscribe(\n      (success) => this.onSuccess(success),\n      (error) => this.onError(error)\n    )\n  }\n\n  deleteUser(user: User) {\n    const modalRef = this.modalService.open(UserMgmtDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.user = user;\n    modalRef.result.then(\n      result => {\n        // Left blank intentionally, nothing to do here\n      },\n      reason => {\n        // Left blank intentionally, nothing to do here\n      }\n    );\n  }\n\n  private onSuccess(data) {\n    this.users = data;\n  }\n\n  private onError(error) {\n    console.log(error);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserManagementRoutingModule } from './user-management-routing.module';\nimport { UserManagementComponent } from './user-management.component';\nimport { UserManagementUpdateComponent } from './user-management-update/user-management-update.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModalStack } from '@ng-bootstrap/ng-bootstrap/modal/modal-stack';\nimport { UserMgmtDeleteDialogComponent } from './user-management-delete-dialog/user-management-delete-dialog.component';\nimport { NgbModalBackdrop } from '@ng-bootstrap/ng-bootstrap/modal/modal-backdrop';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbModalWindow } from '@ng-bootstrap/ng-bootstrap/modal/modal-window';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UserManagementRoutingModule,\n    FormsModule\n  ],\n  declarations: [\n    UserManagementComponent, \n    UserManagementUpdateComponent, \n    UserMgmtDeleteDialogComponent,\n    NgbModalBackdrop,\n    NgbModalWindow\n  ],\n  entryComponents: [\n    UserMgmtDeleteDialogComponent,\n    NgbModalBackdrop,\n    NgbModalWindow\n  ],\n  providers: [\n    NgbModal,\n    NgbModalStack\n  ]\n})\nexport class UserManagementModule { }\n","export interface IUser {\n    id?: any;\n    login?: string;\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    activated?: boolean;\n    langKey?: string;\n    authorities?: any[];\n    createdBy?: string;\n    createdDate?: Date;\n    lastModifiedBy?: string;\n    lastModifiedDate?: Date;\n    password?: string;\n}\n\nexport class User implements IUser {\n    constructor(\n        public id?: any,\n        public login?: string,\n        public firstName?: string,\n        public lastName?: string,\n        public email?: string,\n        public activated?: boolean,\n        public langKey?: string,\n        public authorities?: any[],\n        public createdBy?: string,\n        public createdDate?: Date,\n        public lastModifiedBy?: string,\n        public lastModifiedDate?: Date,\n        public password?: string\n    ) {\n        this.id = id ? id : null;\n        this.login = login ? login : null;\n        this.firstName = firstName ? firstName : null;\n        this.lastName = lastName ? lastName : null;\n        this.email = email ? email : null;\n        this.activated = activated ? activated : false;\n        this.langKey = langKey ? langKey : null;\n        this.authorities = authorities ? authorities : null;\n        this.createdBy = createdBy ? createdBy : null;\n        this.createdDate = createdDate ? createdDate : null;\n        this.lastModifiedBy = lastModifiedBy ? lastModifiedBy : null;\n        this.lastModifiedDate = lastModifiedDate ? lastModifiedDate : null;\n        this.password = password ? password : null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, IUser } from '../../../layout/user-management/user-model';\nimport { LocalStorageService } from '../authentication/local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserManagementService {\n  \n  private resourceUrl: string = environment.SERVER_API_URL + '/api';\n  private users: string = 'users';\n  private jwtToken: string = null;\n\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService\n  ) { }\n\n  update(user: User): Observable<IUser> {\n    if(this.jwtToken == null) {\n      this.jwtToken = this.localStorageService.loadToken();\n    }\n    return this.httpClient.put(`${this.resourceUrl}/${this.users}`, user, { \n      headers: new HttpHeaders({ \n        'Authorization': this.jwtToken\n      }) \n    });\n  }\n\n  find(login: string) {\n    if (this.jwtToken == null) {\n      this.jwtToken = this.localStorageService.loadToken();\n    }\n    return this.httpClient.get(`${this.resourceUrl}/${this.users}/${login}`, {\n      headers: new HttpHeaders({\n        'Authorization': this.jwtToken\n      })\n    });\n  }\n\n  query() {\n    if (this.jwtToken == null) {\n      this.jwtToken = this.localStorageService.loadToken();\n    }\n    return this.httpClient.get(`${this.resourceUrl}/${this.users}`, { \n      headers: new HttpHeaders({ \n        'Authorization': this.jwtToken \n      }) \n    });\n  }\n\n  delete(login: string) {\n    if(this.jwtToken == null) {\n      this.jwtToken = this.localStorageService.loadToken();\n    }\n    return this.httpClient.delete(`${this.resourceUrl}/${this.users}/${login}`, { \n      headers: new HttpHeaders({ \n        'Authorization': this.jwtToken \n      })\n    });\n  }\n}\n"],"sourceRoot":""}