[%import "../util.eol";%]
import argparse
import sys
import time

from crossflow.[%=package%].[%=w.name.toSnakeCaseLower()%] import [%=w.name%]
from crossflow.runtime import Mode


if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument('-name', default='[%=w.name%]Python', help='The name of the workflow')
	parser.add_argument('-master', default='localhost', help='IP of the master')
	parser.add_argument('-brokerHost', default='localhost', help='IP of the broker')
	parser.add_argument('-stompPort', default=61613, help='Port to use for stomp based messages')
	parser.add_argument('-instance', default=None, help='The instance of the master (to contribute to)')
	parser.add_argument('-mode', default='WORKER', help='must be one of WORKER or API')
	
	parsedArgs = parser.parse_args(sys.argv[1:len(sys.argv)])
	
	app = [%=w.name%](name=parsedArgs.name,
	                  master=parsedArgs.master,
	                  brokerHost=parsedArgs.brokerHost,
	                  stompPort=parsedArgs.stompPort,
	                  instanceId=parsedArgs.instance,
	                  mode=Mode.enum_from_name(parsedArgs.mode))
	app.run();
	while (not app.hasTerminated()):
		time.sleep(0.1)
	print("terminated")
