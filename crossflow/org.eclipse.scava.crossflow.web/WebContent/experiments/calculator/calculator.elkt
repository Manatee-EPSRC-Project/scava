graph G_calculator
algorithm: layered

wrapping.additionalEdgeSpacing: 10.0
wrapping.correctionFactor: 8.0
layered.nodePlacement.strategy: NETWORK_SIMPLEX
layered.wrapping.strategy: MULTI_EDGE
aspectRatio: 0.6
edgeRouting: SPLINES
spacing.nodeNodeBetweenLayers: 20.0

node T_CalculationSource {
    nodeLabels.placement: "[H_CENTER, V_TOP, INSIDE]"
    nodeSize.constraints: "[MINIMUM_SIZE, NODE_LABELS]"
	label "CalculationSource"
}

edge T_CalculationSource -> Q_Calculations {
    label ""
}

node Q_Calculations {
    nodeLabels.placement: "[H_CENTER, V_TOP, INSIDE]"
    nodeSize.constraints: "[MINIMUM_SIZE, NODE_LABELS]"
    label "Calculations"
}

edge Q_Calculations -> T_Calculator {
    label "Calculation(a : int, b : int, operator : String)"
}

node T_Calculator {
    nodeLabels.placement: "[H_CENTER, V_TOP, INSIDE]"
    nodeSize.constraints: "[MINIMUM_SIZE, NODE_LABELS]"
	label "Calculator"
}

edge T_Calculator -> Q_CalculationResults {
    label "CalculationResult(a : int, b : int, operator : String, worker : String, result : String)"
}

node Q_CalculationResults {
    nodeLabels.placement: "[H_CENTER, V_TOP, INSIDE]"
    nodeSize.constraints: "[MINIMUM_SIZE, NODE_LABELS]"
    label "CalculationResults"
}

edge Q_CalculationResults -> T_CalculationResultsSink {
    label ""
}

node T_CalculationResultsSink {
    nodeLabels.placement: "[H_CENTER, V_TOP, INSIDE]"
    nodeSize.constraints: "[MINIMUM_SIZE, NODE_LABELS]"
	label "CalculationResultsSink"
}