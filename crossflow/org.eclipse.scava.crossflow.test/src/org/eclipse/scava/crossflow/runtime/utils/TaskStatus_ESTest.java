/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 19:05:25 GMT 2018
 */

package org.eclipse.scava.crossflow.runtime.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import org.eclipse.scava.crossflow.runtime.Workflow;
import org.eclipse.scava.crossflow.runtime.utils.TaskStatus;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TaskStatus_ESTest extends TaskStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Workflow.TaskStatuses workflow_TaskStatuses0 = Workflow.TaskStatuses.STARTED;
      TaskStatus taskStatus0 = new TaskStatus(workflow_TaskStatuses0, "org.eclipse.scava.crossflow.runtime.utils.TaskStatus", "org.eclipse.scava.crossflow.runtime.utils.TaskStatus");
      Workflow.TaskStatuses workflow_TaskStatuses1 = taskStatus0.getStatus();
      assertSame(workflow_TaskStatuses1, workflow_TaskStatuses0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Workflow.TaskStatuses workflow_TaskStatuses0 = Workflow.TaskStatuses.STARTED;
      TaskStatus taskStatus0 = new TaskStatus(workflow_TaskStatuses0, (String) null, (String) null);
      String string0 = taskStatus0.getReason();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Workflow.TaskStatuses workflow_TaskStatuses0 = Workflow.TaskStatuses.WAITING;
      TaskStatus taskStatus0 = new TaskStatus(workflow_TaskStatuses0, "", "");
      String string0 = taskStatus0.getReason();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Workflow.TaskStatuses workflow_TaskStatuses0 = Workflow.TaskStatuses.STARTED;
      TaskStatus taskStatus0 = new TaskStatus(workflow_TaskStatuses0, "org.eclipse.scava.crossflow.runtime.utils.TaskStatus", "org.eclipse.scava.crossflow.runtime.utils.TaskStatus");
      String string0 = taskStatus0.getCaller();
      assertEquals("org.eclipse.scava.crossflow.runtime.utils.TaskStatus", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Workflow.TaskStatuses workflow_TaskStatuses0 = Workflow.TaskStatuses.WAITING;
      TaskStatus taskStatus0 = new TaskStatus(workflow_TaskStatuses0, "", "");
      String string0 = taskStatus0.getCaller();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TaskStatus taskStatus0 = new TaskStatus((Workflow.TaskStatuses) null, (String) null, "jscuki6a");
      String string0 = taskStatus0.getReason();
      assertEquals("jscuki6a", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TaskStatus taskStatus0 = new TaskStatus((Workflow.TaskStatuses) null, (String) null, "jscuki6a");
      taskStatus0.getStatus();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TaskStatus taskStatus0 = new TaskStatus((Workflow.TaskStatuses) null, (String) null, "jscuki6a");
      String string0 = taskStatus0.getCaller();
      assertNull(string0);
  }
}
