/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 18:46:16 GMT 2018
 */

package org.eclipse.scava.crossflow.runtime;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.eclipse.scava.crossflow.runtime.Job;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Job_ESTest extends Job_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Job job0 = new Job();
      assertFalse(job0.isCached());
      
      job0.setCached(true);
      job0.getXML();
      assertTrue(job0.isCached());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Job job0 = new Job();
      job0.setCorrelationId("java.io.StringWriter@0000000273");
      String string0 = job0.getXML();
      assertFalse(job0.isCached());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Job job0 = new Job();
      job0.setDestination("");
      String string0 = job0.getXML();
      assertNotNull(string0);
      assertFalse(job0.isCached());
      assertEquals("00000000-0100-4000-8200-000003000000", job0.getId());
      assertEquals("", job0.getDestination());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Job job0 = new Job();
      job0.setId((String) null);
      String string0 = job0.getId();
      assertFalse(job0.isCached());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Job job0 = new Job();
      job0.id = "";
      String string0 = job0.getId();
      assertNotNull(string0);
      assertFalse(job0.isCached());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Job job0 = new Job();
      job0.setDestination("S6y~,:jMm\"j&3]a9@");
      String string0 = job0.getDestination();
      assertNotNull(string0);
      assertFalse(job0.isCached());
      assertEquals("S6y~,:jMm\"j&3]a9@", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Job job0 = new Job();
      job0.setDestination("");
      String string0 = job0.getDestination();
      assertFalse(job0.isCached());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Job job0 = new Job();
      job0.setCorrelationId("java.io.StringWriter@0000000273");
      String string0 = job0.getCorrelationId();
      assertNotNull(string0);
      assertFalse(job0.isCached());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Job job0 = new Job();
      job0.setCorrelationId("");
      String string0 = job0.getCorrelationId();
      assertNotNull(string0);
      assertFalse(job0.isCached());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Job job0 = new Job();
      assertFalse(job0.isCached());
      
      job0.setCached(true);
      boolean boolean0 = job0.isCached();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Job job0 = new Job();
      String string0 = job0.getId();
      assertNotNull(string0);
      assertFalse(job0.isCached());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Job job0 = new Job();
      String string0 = job0.getCorrelationId();
      assertNull(string0);
      assertFalse(job0.isCached());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Job job0 = new Job();
      job0.setId("00000000-0100-4000-8200-000003000000");
      assertFalse(job0.isCached());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Job job0 = new Job();
      String string0 = job0.getDestination();
      assertFalse(job0.isCached());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Job job0 = new Job();
      // Undeclared exception!
      try { 
        job0.getHash();
        fail("Expecting exception: NoSuchMethodError");
      
      } catch(NoSuchMethodError e) {
         //
         // org.evosuite.runtime.mock.java.util.MockUUID.nameUUIDFromBytes([B)Ljava/util/UUID;
         //
         verifyException("org.eclipse.scava.crossflow.runtime.Job", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Job job0 = new Job();
      boolean boolean0 = job0.isCached();
      assertFalse(boolean0);
  }
}
