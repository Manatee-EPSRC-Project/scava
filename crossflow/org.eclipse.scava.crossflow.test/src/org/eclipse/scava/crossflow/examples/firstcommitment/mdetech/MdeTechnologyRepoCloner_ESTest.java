/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 18:05:04 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.firstcommitment.mdetech;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.apache.camel.impl.CompositeRegistry;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.ExtensionKeywordStargazersTuple;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoCloner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MdeTechnologyRepoCloner_ESTest extends MdeTechnologyRepoCloner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      mdeTechnologyRepoCloner0.committedRepoMap = null;
      Map<String, Integer> map0 = mdeTechnologyRepoCloner0.getCommittedRepoMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        MdeTechnologyRepoCloner.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      CompositeRegistry compositeRegistry0 = new CompositeRegistry();
      Class<String> class0 = String.class;
      Set<String> set0 = compositeRegistry0.findByType(class0);
      mdeTechnologyRepoCloner0.alreadySeenJobs = set0;
      ExtensionKeywordStargazersTuple extensionKeywordStargazersTuple0 = new ExtensionKeywordStargazersTuple();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoCloner0.consumeMdeTechnologyRepoEntries(extensionKeywordStargazersTuple0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoCloner0.cloneRepo("n\"6]5Xwh3gkoh%Y ", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoCloner", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("../../../CLONED-REPOS/epsilon-atom-a85e2e18c6165d137cce031d4df7893d9b48d755");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "+*C u");
      MdeTechnologyRepoCloner.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      ExtensionKeywordStargazersTuple extensionKeywordStargazersTuple0 = new ExtensionKeywordStargazersTuple();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoCloner0.consumeMdeTechnologyRepoEntries(extensionKeywordStargazersTuple0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoCloner", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      Map<String, Integer> map0 = mdeTechnologyRepoCloner0.getCommittedRepoMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      Set<String> set0 = mdeTechnologyRepoCloner0.getAlreadySeenJobs();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          MdeTechnologyRepoCloner.main((String[]) null);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
