/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 18:37:05 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.addition;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.eclipse.scava.crossflow.examples.addition.AdditionExample;
import org.eclipse.scava.crossflow.examples.addition.Number;
import org.eclipse.scava.crossflow.examples.addition.Printer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Printer_ESTest extends Printer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Printer printer0 = new Printer();
      AdditionExample additionExample0 = new AdditionExample();
      printer0.setWorkflow(additionExample0);
      Number number0 = new Number();
      printer0.consumeAdditionResults(number0);
      assertFalse(number0.isCached());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Printer printer0 = new Printer();
      Number number0 = new Number();
      // Undeclared exception!
      try { 
        printer0.consumeAdditionResults(number0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.addition.Printer", e);
      }
  }
}
