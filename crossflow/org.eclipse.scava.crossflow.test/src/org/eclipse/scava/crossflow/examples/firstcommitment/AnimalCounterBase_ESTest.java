/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 18:18:45 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.firstcommitment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.eclipse.scava.crossflow.examples.firstcommitment.Animal;
import org.eclipse.scava.crossflow.examples.firstcommitment.AnimalCounter;
import org.eclipse.scava.crossflow.examples.firstcommitment.FirstCommitmentExample;
import org.eclipse.scava.crossflow.runtime.Mode;
import org.eclipse.scava.crossflow.runtime.Workflow;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AnimalCounterBase_ESTest extends AnimalCounterBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AnimalCounter animalCounter0 = new AnimalCounter();
      FirstCommitmentExample firstCommitmentExample0 = new FirstCommitmentExample();
      Mode mode0 = Mode.WORKER;
      firstCommitmentExample0.setMode(mode0);
      animalCounter0.setWorkflow(firstCommitmentExample0);
      Workflow workflow0 = animalCounter0.getWorkflow();
      assertEquals(Mode.WORKER, workflow0.getMode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AnimalCounter animalCounter0 = new AnimalCounter();
      FirstCommitmentExample firstCommitmentExample0 = new FirstCommitmentExample();
      animalCounter0.setWorkflow(firstCommitmentExample0);
      Workflow workflow0 = animalCounter0.getWorkflow();
      assertSame(workflow0, firstCommitmentExample0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnimalCounter animalCounter0 = new AnimalCounter();
      // Undeclared exception!
      try { 
        animalCounter0.taskUnblocked();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.AnimalCounterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AnimalCounter animalCounter0 = new AnimalCounter();
      // Undeclared exception!
      try { 
        animalCounter0.taskBlocked("5bHp/RvDEXwq-V;$'c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.AnimalCounterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AnimalCounter animalCounter0 = new AnimalCounter();
      Animal animal0 = new Animal();
      // Undeclared exception!
      try { 
        animalCounter0.consumeAnimalsActual(animal0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.AnimalCounterBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AnimalCounter animalCounter0 = new AnimalCounter();
      Workflow workflow0 = animalCounter0.getWorkflow();
      assertNull(workflow0);
  }
}
