/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 18:07:23 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.addition;

import org.junit.Test;
import static org.junit.Assert.*;
import org.eclipse.scava.crossflow.examples.addition.NumberPair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberPair_ESTest extends NumberPair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      numberPair0.b = 1;
      int int0 = numberPair0.getB();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      numberPair0.b = (-1);
      int int0 = numberPair0.getB();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      numberPair0.a = 3569;
      int int0 = numberPair0.getA();
      assertEquals(3569, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      numberPair0.setA((-1219));
      int int0 = numberPair0.getA();
      assertEquals((-1219), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      int int0 = numberPair0.getA();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      int int0 = numberPair0.getB();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      numberPair0.setB(2549);
      assertEquals(2549, numberPair0.getB());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NumberPair numberPair0 = new NumberPair();
      Object[] objectArray0 = numberPair0.toObjectArray();
      assertEquals(2, objectArray0.length);
      assertEquals(0, numberPair0.getA());
      assertEquals(0, numberPair0.getB());
  }
}
