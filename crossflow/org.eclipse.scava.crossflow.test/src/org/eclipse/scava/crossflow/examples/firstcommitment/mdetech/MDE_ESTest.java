/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 19:04:08 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.firstcommitment.mdetech;

import org.junit.Test;
import static org.junit.Assert.*;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MDE;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MDE_ESTest extends MDE_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MDE[] mDEArray0 = MDE.values();
      assertEquals(22, mDEArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MDE mDE0 = MDE.valueOf("JET");
      assertEquals(MDE.JET, mDE0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = MDE.query("+Tpf-2e4 ZWqv*qzhs{", "+Tpf-2e4 ZWqv*qzhs{");
      assertEquals("+Tpf-2e4 ZWqv*qzhs{+extension:+Tpf-2e4 ZWqv*qzhs{", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MDE.main((String[]) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MDE mDE0 = MDE.EGL;
      String string0 = mDE0.getExtension();
      assertEquals("egl", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MDE mDE0 = MDE.EGL;
      String string0 = mDE0.query("var+extension:egl+in:file");
      assertEquals("var+extension:egl+repo:var+extension:egl+in:file+in:file", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MDE mDE0 = MDE.EGL;
      String string0 = mDE0.query();
      assertEquals("var+extension:egl+in:file", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MDE mDE0 = MDE.EGL;
      String string0 = mDE0.getKeyword();
      assertEquals("var", string0);
  }
}
