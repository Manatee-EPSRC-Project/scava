/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 17:11:34 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.firstcommitment.ghrepo;

import org.junit.Test;
import static org.junit.Assert.*;
import org.eclipse.scava.crossflow.examples.firstcommitment.ghrepo.Result;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Result_ESTest extends Result_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Result result0 = new Result();
      result0.technology = "D89+]PQ~}GA";
      String string0 = result0.getTechnology();
      assertEquals("D89+]PQ~}GA", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Result result0 = new Result();
      result0.setTechnology("");
      String string0 = result0.getTechnology();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer(0);
      result0.setRepos(integer0);
      Integer integer1 = result0.getRepos();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer(2667);
      result0.setRepos(integer0);
      Integer integer1 = result0.getRepos();
      assertEquals(2667, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer((-1074));
      result0.setRepos(integer0);
      Integer integer1 = result0.getRepos();
      assertEquals((-1074), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer(0);
      result0.files = integer0;
      Integer integer1 = result0.getFiles();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer(1);
      result0.files = integer0;
      Integer integer1 = result0.getFiles();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer((-1));
      result0.setFiles(integer0);
      Integer integer1 = result0.getFiles();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer(0);
      result0.setAuthors(integer0);
      Integer integer1 = result0.getAuthors();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer(2710);
      result0.setAuthors(integer0);
      Integer integer1 = result0.getAuthors();
      assertEquals(2710, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = new Integer((-1332));
      result0.setAuthors(integer0);
      Integer integer1 = result0.getAuthors();
      assertEquals((-1332), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = result0.getAuthors();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = result0.getRepos();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Result result0 = new Result();
      String string0 = result0.getTechnology();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Result result0 = new Result();
      Integer integer0 = result0.getFiles();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Result result0 = new Result();
      Object[] objectArray0 = result0.toObjectArray();
      assertEquals(4, objectArray0.length);
  }
}
