/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 16:51:35 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.firstcommitment.mdetech;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.util.Map;
import java.util.Set;
import org.eclipse.jgit.lib.Config;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.ExtensionKeywordStargazersRemoteRepoUrlTuple;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoAuthorCounter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MdeTechnologyRepoAuthorCounter_ESTest extends MdeTechnologyRepoAuthorCounter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MdeTechnologyRepoAuthorCounter mdeTechnologyRepoAuthorCounter0 = new MdeTechnologyRepoAuthorCounter();
      mdeTechnologyRepoAuthorCounter0.committedRepoMap = null;
      Map<String, Integer> map0 = mdeTechnologyRepoAuthorCounter0.getCommittedRepoMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MdeTechnologyRepoAuthorCounter mdeTechnologyRepoAuthorCounter0 = new MdeTechnologyRepoAuthorCounter();
      mdeTechnologyRepoAuthorCounter0.alreadySeenJobs = null;
      Set<String> set0 = mdeTechnologyRepoAuthorCounter0.getAlreadySeenJobs();
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/blizzfire/REPOS/CROSSMINER-REPOS/CROSSMINER-PUBLIC/scava-crossflow/.git/config");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        MdeTechnologyRepoAuthorCounter.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoAuthorCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/blizzfire/REPOS/CROSSMINER-REPOS/CROSSMINER-PUBLIC/scava-crossflow/.git/config");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Type-wrapped deserializer's deserializeWithType should never get called");
      // Undeclared exception!
      try { 
        MdeTechnologyRepoAuthorCounter.main((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Repository config file /Users/blizzfire/REPOS/CROSSMINER-REPOS/CROSSMINER-PUBLIC/scava-crossflow/.git/config invalid Cannot read file /Users/blizzfire/REPOS/CROSSMINER-REPOS/CROSSMINER-PUBLIC/scava-crossflow/.git/config
         //
         verifyException("org.eclipse.jgit.lib.BaseRepositoryBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      try { 
        MdeTechnologyRepoAuthorCounter.main(stringArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MdeTechnologyRepoAuthorCounter mdeTechnologyRepoAuthorCounter0 = new MdeTechnologyRepoAuthorCounter();
      Config config0 = new Config();
      Set<String> set0 = config0.getSections();
      mdeTechnologyRepoAuthorCounter0.alreadySeenJobs = set0;
      ExtensionKeywordStargazersRemoteRepoUrlTuple extensionKeywordStargazersRemoteRepoUrlTuple0 = new ExtensionKeywordStargazersRemoteRepoUrlTuple();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoAuthorCounter0.consumeMdeTechnologyClonedRepoEntriesForAuthorCounter(extensionKeywordStargazersRemoteRepoUrlTuple0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MdeTechnologyRepoAuthorCounter mdeTechnologyRepoAuthorCounter0 = new MdeTechnologyRepoAuthorCounter();
      ExtensionKeywordStargazersRemoteRepoUrlTuple extensionKeywordStargazersRemoteRepoUrlTuple0 = new ExtensionKeywordStargazersRemoteRepoUrlTuple();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoAuthorCounter0.consumeMdeTechnologyClonedRepoEntriesForAuthorCounter(extensionKeywordStargazersRemoteRepoUrlTuple0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoAuthorCounter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MdeTechnologyRepoAuthorCounter mdeTechnologyRepoAuthorCounter0 = new MdeTechnologyRepoAuthorCounter();
      Map<String, Integer> map0 = mdeTechnologyRepoAuthorCounter0.getCommittedRepoMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MdeTechnologyRepoAuthorCounter mdeTechnologyRepoAuthorCounter0 = new MdeTechnologyRepoAuthorCounter();
      Set<String> set0 = mdeTechnologyRepoAuthorCounter0.getAlreadySeenJobs();
      assertTrue(set0.isEmpty());
  }
}
