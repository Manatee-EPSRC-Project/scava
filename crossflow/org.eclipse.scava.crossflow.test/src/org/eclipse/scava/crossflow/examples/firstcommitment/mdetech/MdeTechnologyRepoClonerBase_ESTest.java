/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 23 17:38:16 GMT 2018
 */

package org.eclipse.scava.crossflow.examples.firstcommitment.mdetech;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.EclipseResultPublisher;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.ExtensionKeywordStargazersTuple;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyClonedRepoEntriesForAuthorCounter;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyClonedRepoEntriesForFileCounter;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyClonedRepoEntriesForOwnerPopularityCounter;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyExample;
import org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoCloner;
import org.eclipse.scava.crossflow.runtime.Workflow;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MdeTechnologyRepoClonerBase_ESTest extends MdeTechnologyRepoClonerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      mdeTechnologyRepoCloner0.setWorkflow((MdeTechnologyExample) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      Workflow workflow0 = mdeTechnologyRepoCloner0.getWorkflow();
      assertNull(workflow0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoCloner0.consumeMdeTechnologyRepoEntriesActual((ExtensionKeywordStargazersTuple) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoClonerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      mdeTechnologyRepoCloner0.setEclipseResultPublisher((EclipseResultPublisher) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      mdeTechnologyRepoCloner0.setMdeTechnologyClonedRepoEntriesForOwnerPopularityCounter((MdeTechnologyClonedRepoEntriesForOwnerPopularityCounter) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      MdeTechnologyClonedRepoEntriesForAuthorCounter mdeTechnologyClonedRepoEntriesForAuthorCounter0 = mdeTechnologyRepoCloner0.getMdeTechnologyClonedRepoEntriesForAuthorCounter();
      assertNull(mdeTechnologyClonedRepoEntriesForAuthorCounter0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      mdeTechnologyRepoCloner0.setMdeTechnologyClonedRepoEntriesForAuthorCounter((MdeTechnologyClonedRepoEntriesForAuthorCounter) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      MdeTechnologyClonedRepoEntriesForFileCounter mdeTechnologyClonedRepoEntriesForFileCounter0 = mdeTechnologyRepoCloner0.getMdeTechnologyClonedRepoEntriesForFileCounter();
      assertNull(mdeTechnologyClonedRepoEntriesForFileCounter0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      MdeTechnologyClonedRepoEntriesForOwnerPopularityCounter mdeTechnologyClonedRepoEntriesForOwnerPopularityCounter0 = mdeTechnologyRepoCloner0.getMdeTechnologyClonedRepoEntriesForOwnerPopularityCounter();
      assertNull(mdeTechnologyClonedRepoEntriesForOwnerPopularityCounter0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoCloner0.taskBlocked("qGrp#?aL=7|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoClonerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      EclipseResultPublisher eclipseResultPublisher0 = mdeTechnologyRepoCloner0.getEclipseResultPublisher();
      assertNull(eclipseResultPublisher0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      mdeTechnologyRepoCloner0.setMdeTechnologyClonedRepoEntriesForFileCounter((MdeTechnologyClonedRepoEntriesForFileCounter) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MdeTechnologyRepoCloner mdeTechnologyRepoCloner0 = new MdeTechnologyRepoCloner();
      // Undeclared exception!
      try { 
        mdeTechnologyRepoCloner0.taskUnblocked();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.eclipse.scava.crossflow.examples.firstcommitment.mdetech.MdeTechnologyRepoClonerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          String[] stringArray0 = new String[17];
          MdeTechnologyRepoCloner.main(stringArray0);
          assertEquals(17, stringArray0.length);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
